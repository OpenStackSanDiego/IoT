[{"id":"6933e67e.a9b6a8","type":"tab","label":"Sensor Basics"},{"id":"4ac9ba7b.0224b4","type":"tab","label":"Twitter Alerting"},{"id":"2b0bec91.d69ff4","type":"tab","label":"Camera"},{"id":"c1ec2dc5.35e79","type":"tab","label":"HTTP Service"},{"id":"16f11d05.686153","type":"tab","label":"Database"},{"id":"3bb7f15e.5ae90e","type":"mongodb","z":"","hostname":"127.0.0.1","port":"27017","db":"iot","name":"mongodb localhost"},{"id":"ca180610.031998","type":"function","z":"6933e67e.a9b6a8","name":"TemperatureSensor","func":"temperature = Math.round(Math.random()*60);\nmsg.payload = temperature;\nreturn msg;","outputs":1,"noerr":0,"x":420.90000915527344,"y":246.59999084472656,"wires":[["fe891920.257d48"]]},{"id":"44b09a21.9b2b94","type":"function","z":"6933e67e.a9b6a8","name":"VoltageSensor","func":"\nrandom = Math.random()\nvoltage = 110\n\n// 40% chance of a brownout...\nif ( random < .4 )\n  voltage -= 20 ;\n\nmsg.payload = voltage;\nreturn msg","outputs":1,"noerr":0,"x":420.2000274658203,"y":306.20001220703125,"wires":[[]]},{"id":"3037c891.a75948","type":"inject","z":"6933e67e.a9b6a8","name":"","topic":"","payload":"","payloadType":"str","repeat":"","crontab":"","once":false,"x":186.50001525878906,"y":201.00001525878906,"wires":[["ca180610.031998"]]},{"id":"fe891920.257d48","type":"debug","z":"6933e67e.a9b6a8","name":"","active":true,"console":"false","complete":"payload","x":688.9000091552734,"y":221.8000030517578,"wires":[]},{"id":"a14a405e.f1d5c","type":"comment","z":"4ac9ba7b.0224b4","name":"Twitter - README","info":"Create a flows that posts alerts Twitter.\nYou'll want to use the inject and Twitter nodes.\nBe sure to include \"#SanDiegoIoT\" in the tweet!\n\nTODO\n  * Send a simple tweet out via the Twitter node - include \"#SanDiegoIoT\" in the message\n  * Use the Twitter out, inject and template nodes\n  * Check that your message showed up on Twitter!\n  \nTODO\n  * output a tweet if the fridge is above 40Â°\n  * output a tweet if the voltage is below 109v\n  * HINT: copy over your workflows from the previous tab\n  * Setup this workflow to repeat every 10 seconds\n\nTODO\n  * Display in the console tweets that are tagged \"#SanDiegoIoT\"\n  * HINT: use the twitter in node","x":372.90000915527344,"y":158.60000610351562,"wires":[]},{"id":"d2b14023.1c96f","type":"comment","z":"6933e67e.a9b6a8","name":"Sensor Sample - README","info":"Click \"Deploy\" in the upper right corner to deploy this workflow.\nClick the blue button to the left of the blue node to inject an event.\nClick the \"debug\" tab to view the output of the sensors.\n\nTODO\n  * wire up the voltage sensor to output to the console\n  * HINT: be sure to click \"Deploy\" after changing the workflow\n  \n\nTODO\n  * output a warning message if the fridge is above 40Â°\n  * output a warning message if the voltage is below 109v\n  * HINT: use the Switch node and make sure to check for a number\n\nTODO\n  * use the Template node to output a useful message rather than just the number\n  * Include the temperature from the sensor in the message\n  * HINT: use {{payload}} to the value of the sensor from the previous node","x":368.20001220703125,"y":96,"wires":[]},{"id":"970a9860.e5f758","type":"debug","z":"6933e67e.a9b6a8","name":"","active":true,"console":"false","complete":"payload","x":782.2000274658203,"y":332.20001220703125,"wires":[]},{"id":"adc138f8.1401a8","type":"comment","z":"2b0bec91.d69ff4","name":"Camera - README","info":"In this flow you've been provided a camera sensor.\nYou'll want to query the camera and post the picture to Twitter.\nYou'll want to use the inject, Function and Twitter nodes.\nBe sure to include \"#SanDiegoIoT\" in the tweet!\n\nTODO\n  * Send a Tweet with a snapshot from the camera and include \"#SanDiegoIoT\" in the text\n\nHINTS:\n  * The camera outputs the picture in msg.payload\n  * Twitter wants the text in msg.payload and picture in msg.media\n  * Use Function to set msg.payload and msg.media before sending to Twitter\n ","x":386.2000274658203,"y":96.19999694824219,"wires":[]},{"id":"17ba8f31.3b8101","type":"http request","z":"2b0bec91.d69ff4","name":"Download Image","method":"GET","ret":"bin","url":"http://147.75.97.69:8080/v1/AUTH_cba9442bbc31406aa73f52fa7233fb88/camera/{{{query}}}.jpg","tls":"","x":416.90003967285156,"y":359.80003356933594,"wires":[[]]},{"id":"8ec1bf63.fae16","type":"inject","z":"2b0bec91.d69ff4","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":148.50001525878906,"y":235.00001525878906,"wires":[["bc2d1c59.56b9f"]]},{"id":"bc2d1c59.56b9f","type":"random","z":"2b0bec91.d69ff4","name":"Select Camera Image","low":"108","high":"214","inte":"true","x":452.90003967285156,"y":186.5999755859375,"wires":[["54e8672.6118798"]]},{"id":"54e8672.6118798","type":"change","z":"2b0bec91.d69ff4","name":"Set Camera Query Parameter","rules":[{"t":"set","p":"query","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":458.49998474121094,"y":268.59999084472656,"wires":[["17ba8f31.3b8101"]]},{"id":"ff1b6c19.6fd4b","type":"comment","z":"c1ec2dc5.35e79","name":"HTTP Service - README","info":"In this flow you'll be providing a service for external use\nBe sure to include \"#SanDiegoIoT\" in the tweet!\n\nTODO - Create the Service\n  * Create a service that makes available the temperature to the Internet\n  * Connect to the service from your browser\n  * http://YOUR_IP:1880/service_name\n\nTODO\n  * Start up another IoT node from OpenStack\n  * Have the other IoT node consume this new service\n\nHINTS:\n  * Copy over the temperature sensor from the other workflow\n  * Use the HTTP input to make your service available\n  * End the service with HTTP response\n  * Use HTTP request for the other node to hit this service\n ","x":498.2000274658203,"y":124.19999694824219,"wires":[]},{"id":"580da48a.08100c","type":"comment","z":"16f11d05.686153","name":"Database - README","info":"In this flow you'll be using a database to save information\n\nMongoDB is installed and ready to use on the instance\nNo username/password is required\n\nYou can save:\n  * Tweets\n  * Temperature\n  * Anything else you might find interesting!\n  * \n\nHINTS:\n  * Use the MongoDB node to save and retrieve data\n  * Use the defaults in the MongoDB node\n  * Use the same collection name to save/read data\n\nTODO:\n  * Read from services/sensors/tweets into MongoDB\n\nTODO - Create a service that pulls the data from MongoDB\n  * Create a service that makes available the temperature to the Internet\n  * Connect to the service from your browser\n  * http://YOUR_IP:1880/service_name","x":518.2000122070312,"y":160.1999969482422,"wires":[]},{"id":"61d42254.600cac","type":"mongodb in","z":"16f11d05.686153","mongodb":"3bb7f15e.5ae90e","name":"","collection":"","operation":"aggregate","x":502.90000915527344,"y":298.1999969482422,"wires":[[]]},{"id":"86a620d6.6591d","type":"mongodb out","z":"16f11d05.686153","mongodb":"3bb7f15e.5ae90e","name":"","collection":"","payonly":false,"upsert":false,"multi":false,"operation":"store","x":544.9000091552734,"y":409.8000030517578,"wires":[]}]